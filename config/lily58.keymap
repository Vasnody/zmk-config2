/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        russ_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3     &kp N4  &kp N5                         &kp N6    &kp N7    &kp N8     &kp N9   &kp N0    &kp DELETE
&kp ESC    &kp Q   &kp W   &kp E      &kp R   &kp T                          &kp Y     &kp U     &kp I      &kp O    &kp P     &kp BSPC
&kp TAB    &kp A   &kp S   &kp D      &kp F   &kp G                          &kp H     &kp J     &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X   &kp C      &kp V   &kp B   &kp LBKT     &kp RBKT  &kp N     &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                           &kp LCTRL  &mo 4   &to 1   &kp SPACE    &mo 6     &kp LBKT  &kp RBKT  &kp BSLH
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        colemak_layer {
            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3     &kp N4  &kp N5                                         &kp N6    &kp N7    &kp N8     &kp N9   &kp N0    &kp DEL
&kp ESC    &kp Q   &kp W   &kp F      &kp P   &kp B                                          &kp J     &kp L     &kp U      &kp Y    &kp SEMI  &kp BSPC
&kp TAB    &kp A   &kp R   &kp S      &kp T   &kp G                                          &kp M     &kp N     &kp E      &kp I    &kp O     &kp SQT
&kp LSHFT  &kp Z   &kp X   &kp C      &kp D   &kp V   &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &kp K     &kp H     &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                           &kp LCTRL  &to 0   &to 2   &kp SPACE           &mo 5              &kp LBKT  &kp RBKT  &kp BSLH
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        gaming_layer {
            bindings = <
&kp ESC       &kp N1  &kp N2  &kp N3     &kp N4  &kp N5                         &kp N6    &kp N7    &kp N8     &kp N9   &kp N0    &kp DEL
&kp TAB       &kp Q   &kp W   &kp E      &kp R   &kp T                          &kp Y     &kp U     &kp I      &kp O    &kp P     &kp BSPC
&kp CAPSLOCK  &kp A   &kp S   &kp D      &kp F   &kp G                          &kp H     &kp J     &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT     &kp Z   &kp X   &kp C      &kp V   &kp B   &kp LBKT     &kp RBKT  &kp N     &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                              &kp LCTRL  &to 1   &none   &kp SPACE    &mo 6     &kp LBKT  &kp RBKT  &kp BSLH
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        empty {
            bindings = <
&none  &none  &none  &none  &none  &none                  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none  &none
                     &none  &none  &none  &none    &none  &none  &none  &none
            >;
        };

        bt_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2       &bt BT_SEL 3  &bt BT_SEL 4                  &none      &none      &none      &none     &none     &none
&kp F1      &kp F2            &kp F3             &kp F4             &kp F5        &kp F6                        &kp F7     &kp F8     &kp F9     &kp F10   &kp F11   &kp F12
&kp GRAVE   &kp EXCL          &kp AT             &kp HASH           &kp DOLLAR    &kp PRCNT                     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp TILDE
&none       &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &none         &none         &none    &none  &none      &kp MINUS  &kp PLUS   &kp LBRC  &kp RBRC  &kp PIPE
                                                 &none              &none         &none         &none    &none  &none      &none      &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        colemak_mod {
            bindings = <
&kp CAPS   &trans        &trans       &trans         &trans         &trans                              &trans             &trans           &kp UP        &trans         &trans     &trans
&kp TAB    &kp N1        &kp N2       &kp N3         &kp N4         &kp N5                              &kp N6             &kp LEFT         &kp DOWN      &kp RIGHT      &kp N0     &kp BSPC
&kp LSHFT  &kp LS(EXCL)  &kp LS(DQT)  &kp LS(POUND)  &kp SEMI       &kp LS(PRCNT)                       &kp LS(STAR)       &kp LS(LPAR)     &kp LS(RPAR)  &kp LS(PLUS)   &kp MINUS  &kp RET
&kp LCTRL  &kp LGUI      &kp LALT     &kp F11        &kp LS(COLON)  &trans         &trans       &trans  &trans             &kp LS(QMARK)    &trans        &kp LS(COMMA)  &kp FSLH   &kp RIGHT
                                      &trans         &kp LS(AT)     &kp LS(DLLR)   &kp SPACE    &trans  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans
            >;
        };

        russ_mod {
            bindings = <
&kp CAPS   &trans        &trans      &trans         &trans         &trans                              &trans             &trans           &kp UP        &trans         &trans     &trans
&kp TAB    &kp N1        &kp N2      &kp N3         &kp N4         &kp N5                              &kp N6             &kp LEFT         &kp DOWN      &kp RIGHT      &kp N0     &kp BSPC
&kp LSHFT  &kp LS(EXCL)  &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)   &kp LS(PRCNT)                       &kp LS(STAR)       &kp LS(LPAR)     &kp LS(RPAR)  &kp LS(PLUS)   &kp MINUS  &kp RET
&kp LCTRL  &kp LGUI      &kp LALT    &kp F11        &kp LS(CARET)  &trans         &trans       &trans  &trans             &kp LS(AMPS)     &trans        &kp LS(COMMA)  &kp FSLH   &kp RIGHT
                                     &trans         &trans         &trans         &kp SPACE    &trans  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans
            >;
        };
    };
};
